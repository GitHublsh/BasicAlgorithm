public class QuickSort {  
    public static void main(String[] args) {  
        int[] a = {1, 2, 4, 5, 7, 4, 5 ,3 ,9 ,0};  
        System.out.println(Arrays.toString(a));  
        quickSort(a);  
        System.out.println(Arrays.toString(a));  
    }  
  
    public static void quickSort(int[] a) {  
        if(a.length>0) {  
            quickSort(a, 0 , a.length-1);  
        }  
    }  
  
    private static void quickSort(int[] a, int low, int high) {  
        //1,找到递归算法的出口  
        if( low > high) {  
            return;  
        }  
        //2, 存  
        int i = low;  
        int j = high;  
        //3,key  
        int key = a[ low ];  
        //4，完成一趟排序  
        while( i< j) {  
            //4.1 ，从右往左找到第一个小于key的数  
            while(i<j && a[j] > key){  
                j--;  
            }  
            // 4.2 从左往右找到第一个大于key的数  
            while( i<j && a[i] <= key) {  
                i++;  
            }  
            //4.3 交换  
            if(i<j) {  
                int p = a[i];  
                a[i] = a[j];  
                a[j] = p;  
            }  
        }  
        // 4.4，调整key的位置  
        int p = a[i];  
        a[i] = a[low];  
        a[low] = p;  
        //5, 对key左边的数快排  
        quickSort(a, low, i-1 );  
        //6, 对key右边的数快排  
        quickSort(a, i+1, high);  
    }  
}  

/***********************************JAVA*******************************************/
//Java
public static void quickSort(int[] a, int left, int right) {
        int i, j, t, key;
        if (left > right)
            return;

        key = a[left]; //temp中存的就是基准数
        i = left;
        j = right;
        while (i != j) {
            //顺序很重要，要先从右边开始找
            while (a[j] >= key && i < j)
                j--;
            //再找左边
            while (a[i] <= key && i < j)
                i++;
            //交换两个数在数组中的位置
            if (i < j) {
                t = a[i];
                a[i] = a[j];
                a[j] = t;
            }
        }
        //最终将基准数归位
        a[left] = a[i];
        a[i] = key;

        quickSort(a, left, i - 1);//继续处理左边的，这里是一个递归的过程
        quickSort(a, i + 1, right);//继续处理右边的 ，这里是一个递归的过程
    }



/***********************************JAVA*******************************************/



/***********************************C*********************************************/


//C语言
    public static void quickSort(int[] a, int left, int right) {

            int i = left;
                    int j = right;
                    key = a[left];
                    if (left>right) return;
                    while (i<j){
                        while (i<j && a[j]>=key){
                            j--;
                        }
                        a[i] = a[j];
                        while (i<j && a[i]<=key){
                            i++;
                        }
                        a[j]=a[i];
                    }
                    a[i] = key;
                    quickSort(a,left,i-1);
                    quickSort(a,i+1,right);
                    
    }
    
/***********************************C*********************************************/


